[
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "receiver",
        "importPath": "django.dispatch",
        "description": "django.dispatch",
        "isExtraImport": true,
        "detail": "django.dispatch",
        "documentation": {}
    },
    {
        "label": "post_save",
        "importPath": "django.db.models.signals",
        "description": "django.db.models.signals",
        "isExtraImport": true,
        "detail": "django.db.models.signals",
        "documentation": {}
    },
    {
        "label": "fields",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "api_view",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "permission_classes",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "api_view",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "permission_classes",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "make_password",
        "importPath": "django.contrib.auth.hashers",
        "description": "django.contrib.auth.hashers",
        "isExtraImport": true,
        "detail": "django.contrib.auth.hashers",
        "documentation": {}
    },
    {
        "label": "IsAuthenticated",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "IsAuthenticated",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "dotenv",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "dotenv",
        "description": "dotenv",
        "detail": "dotenv",
        "documentation": {}
    },
    {
        "label": "datetime",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "datetime",
        "description": "datetime",
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "TokenObtainPairView",
        "importPath": "rest_framework_simplejwt.views",
        "description": "rest_framework_simplejwt.views",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.views",
        "documentation": {}
    },
    {
        "label": "TokenVerifyView",
        "importPath": "rest_framework_simplejwt.views",
        "description": "rest_framework_simplejwt.views",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.views",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "django.contrib.gis.db.models.fields",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.contrib.gis.db.models.fields",
        "description": "django.contrib.gis.db.models.fields",
        "detail": "django.contrib.gis.db.models.fields",
        "documentation": {}
    },
    {
        "label": "django.contrib.gis.geos.point",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.contrib.gis.geos.point",
        "description": "django.contrib.gis.geos.point",
        "detail": "django.contrib.gis.geos.point",
        "documentation": {}
    },
    {
        "label": "django.core.validators",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.core.validators",
        "description": "django.core.validators",
        "detail": "django.core.validators",
        "documentation": {}
    },
    {
        "label": "MinValueValidator",
        "importPath": "django.core.validators",
        "description": "django.core.validators",
        "isExtraImport": true,
        "detail": "django.core.validators",
        "documentation": {}
    },
    {
        "label": "MaxValueValidator",
        "importPath": "django.core.validators",
        "description": "django.core.validators",
        "isExtraImport": true,
        "detail": "django.core.validators",
        "documentation": {}
    },
    {
        "label": "job.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "job.models",
        "description": "job.models",
        "detail": "job.models",
        "documentation": {}
    },
    {
        "label": "rest_framework",
        "importPath": "django_filters",
        "description": "django_filters",
        "isExtraImport": true,
        "detail": "django_filters",
        "documentation": {}
    },
    {
        "label": "geocoder",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "geocoder",
        "description": "geocoder",
        "detail": "geocoder",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.contrib.gis.db",
        "description": "django.contrib.gis.db",
        "isExtraImport": true,
        "detail": "django.contrib.gis.db",
        "documentation": {}
    },
    {
        "label": "Point",
        "importPath": "django.contrib.gis.geos",
        "description": "django.contrib.gis.geos",
        "isExtraImport": true,
        "detail": "django.contrib.gis.geos",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "Avg",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Min",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Max",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Count",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "PageNumberPagination",
        "importPath": "rest_framework.pagination",
        "description": "rest_framework.pagination",
        "isExtraImport": true,
        "detail": "rest_framework.pagination",
        "documentation": {}
    },
    {
        "label": "exception_handler",
        "importPath": "rest_framework.views",
        "description": "rest_framework.views",
        "isExtraImport": true,
        "detail": "rest_framework.views",
        "documentation": {}
    },
    {
        "label": "JsonResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "site",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "site",
        "description": "site",
        "detail": "site",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "osgeo_utils.gdal2tiles",
        "description": "osgeo_utils.gdal2tiles",
        "isExtraImport": true,
        "detail": "osgeo_utils.gdal2tiles",
        "documentation": {}
    },
    {
        "label": "main",
        "importPath": "osgeo_utils.gdal2tiles",
        "description": "osgeo_utils.gdal2tiles",
        "isExtraImport": true,
        "detail": "osgeo_utils.gdal2tiles",
        "documentation": {}
    },
    {
        "label": "deprecation_warn",
        "importPath": "osgeo.gdal",
        "description": "osgeo.gdal",
        "isExtraImport": true,
        "detail": "osgeo.gdal",
        "documentation": {}
    },
    {
        "label": "deprecation_warn",
        "importPath": "osgeo.gdal",
        "description": "osgeo.gdal",
        "isExtraImport": true,
        "detail": "osgeo.gdal",
        "documentation": {}
    },
    {
        "label": "deprecation_warn",
        "importPath": "osgeo.gdal",
        "description": "osgeo.gdal",
        "isExtraImport": true,
        "detail": "osgeo.gdal",
        "documentation": {}
    },
    {
        "label": "deprecation_warn",
        "importPath": "osgeo.gdal",
        "description": "osgeo.gdal",
        "isExtraImport": true,
        "detail": "osgeo.gdal",
        "documentation": {}
    },
    {
        "label": "deprecation_warn",
        "importPath": "osgeo.gdal",
        "description": "osgeo.gdal",
        "isExtraImport": true,
        "detail": "osgeo.gdal",
        "documentation": {}
    },
    {
        "label": "deprecation_warn",
        "importPath": "osgeo.gdal",
        "description": "osgeo.gdal",
        "isExtraImport": true,
        "detail": "osgeo.gdal",
        "documentation": {}
    },
    {
        "label": "deprecation_warn",
        "importPath": "osgeo.gdal",
        "description": "osgeo.gdal",
        "isExtraImport": true,
        "detail": "osgeo.gdal",
        "documentation": {}
    },
    {
        "label": "deprecation_warn",
        "importPath": "osgeo.gdal",
        "description": "osgeo.gdal",
        "isExtraImport": true,
        "detail": "osgeo.gdal",
        "documentation": {}
    },
    {
        "label": "deprecation_warn",
        "importPath": "osgeo.gdal",
        "description": "osgeo.gdal",
        "isExtraImport": true,
        "detail": "osgeo.gdal",
        "documentation": {}
    },
    {
        "label": "deprecation_warn",
        "importPath": "osgeo.gdal",
        "description": "osgeo.gdal",
        "isExtraImport": true,
        "detail": "osgeo.gdal",
        "documentation": {}
    },
    {
        "label": "deprecation_warn",
        "importPath": "osgeo.gdal",
        "description": "osgeo.gdal",
        "isExtraImport": true,
        "detail": "osgeo.gdal",
        "documentation": {}
    },
    {
        "label": "deprecation_warn",
        "importPath": "osgeo.gdal",
        "description": "osgeo.gdal",
        "isExtraImport": true,
        "detail": "osgeo.gdal",
        "documentation": {}
    },
    {
        "label": "deprecation_warn",
        "importPath": "osgeo.gdal",
        "description": "osgeo.gdal",
        "isExtraImport": true,
        "detail": "osgeo.gdal",
        "documentation": {}
    },
    {
        "label": "deprecation_warn",
        "importPath": "osgeo.gdal",
        "description": "osgeo.gdal",
        "isExtraImport": true,
        "detail": "osgeo.gdal",
        "documentation": {}
    },
    {
        "label": "deprecation_warn",
        "importPath": "osgeo.gdal",
        "description": "osgeo.gdal",
        "isExtraImport": true,
        "detail": "osgeo.gdal",
        "documentation": {}
    },
    {
        "label": "deprecation_warn",
        "importPath": "osgeo.gdal",
        "description": "osgeo.gdal",
        "isExtraImport": true,
        "detail": "osgeo.gdal",
        "documentation": {}
    },
    {
        "label": "deprecation_warn",
        "importPath": "osgeo.gdal",
        "description": "osgeo.gdal",
        "isExtraImport": true,
        "detail": "osgeo.gdal",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "osgeo_utils.gdal2xyz",
        "description": "osgeo_utils.gdal2xyz",
        "isExtraImport": true,
        "detail": "osgeo_utils.gdal2xyz",
        "documentation": {}
    },
    {
        "label": "main",
        "importPath": "osgeo_utils.gdal2xyz",
        "description": "osgeo_utils.gdal2xyz",
        "isExtraImport": true,
        "detail": "osgeo_utils.gdal2xyz",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "osgeo_utils.gdalattachpct",
        "description": "osgeo_utils.gdalattachpct",
        "isExtraImport": true,
        "detail": "osgeo_utils.gdalattachpct",
        "documentation": {}
    },
    {
        "label": "main",
        "importPath": "osgeo_utils.gdalattachpct",
        "description": "osgeo_utils.gdalattachpct",
        "isExtraImport": true,
        "detail": "osgeo_utils.gdalattachpct",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "osgeo_utils.gdalcompare",
        "description": "osgeo_utils.gdalcompare",
        "isExtraImport": true,
        "detail": "osgeo_utils.gdalcompare",
        "documentation": {}
    },
    {
        "label": "main",
        "importPath": "osgeo_utils.gdalcompare",
        "description": "osgeo_utils.gdalcompare",
        "isExtraImport": true,
        "detail": "osgeo_utils.gdalcompare",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "osgeo_utils.gdalmove",
        "description": "osgeo_utils.gdalmove",
        "isExtraImport": true,
        "detail": "osgeo_utils.gdalmove",
        "documentation": {}
    },
    {
        "label": "main",
        "importPath": "osgeo_utils.gdalmove",
        "description": "osgeo_utils.gdalmove",
        "isExtraImport": true,
        "detail": "osgeo_utils.gdalmove",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "osgeo_utils.gdal_calc",
        "description": "osgeo_utils.gdal_calc",
        "isExtraImport": true,
        "detail": "osgeo_utils.gdal_calc",
        "documentation": {}
    },
    {
        "label": "main",
        "importPath": "osgeo_utils.gdal_calc",
        "description": "osgeo_utils.gdal_calc",
        "isExtraImport": true,
        "detail": "osgeo_utils.gdal_calc",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "osgeo_utils.gdal_edit",
        "description": "osgeo_utils.gdal_edit",
        "isExtraImport": true,
        "detail": "osgeo_utils.gdal_edit",
        "documentation": {}
    },
    {
        "label": "main",
        "importPath": "osgeo_utils.gdal_edit",
        "description": "osgeo_utils.gdal_edit",
        "isExtraImport": true,
        "detail": "osgeo_utils.gdal_edit",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "osgeo_utils.gdal_fillnodata",
        "description": "osgeo_utils.gdal_fillnodata",
        "isExtraImport": true,
        "detail": "osgeo_utils.gdal_fillnodata",
        "documentation": {}
    },
    {
        "label": "main",
        "importPath": "osgeo_utils.gdal_fillnodata",
        "description": "osgeo_utils.gdal_fillnodata",
        "isExtraImport": true,
        "detail": "osgeo_utils.gdal_fillnodata",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "osgeo_utils.gdal_merge",
        "description": "osgeo_utils.gdal_merge",
        "isExtraImport": true,
        "detail": "osgeo_utils.gdal_merge",
        "documentation": {}
    },
    {
        "label": "main",
        "importPath": "osgeo_utils.gdal_merge",
        "description": "osgeo_utils.gdal_merge",
        "isExtraImport": true,
        "detail": "osgeo_utils.gdal_merge",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "osgeo_utils.gdal_pansharpen",
        "description": "osgeo_utils.gdal_pansharpen",
        "isExtraImport": true,
        "detail": "osgeo_utils.gdal_pansharpen",
        "documentation": {}
    },
    {
        "label": "main",
        "importPath": "osgeo_utils.gdal_pansharpen",
        "description": "osgeo_utils.gdal_pansharpen",
        "isExtraImport": true,
        "detail": "osgeo_utils.gdal_pansharpen",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "osgeo_utils.gdal_polygonize",
        "description": "osgeo_utils.gdal_polygonize",
        "isExtraImport": true,
        "detail": "osgeo_utils.gdal_polygonize",
        "documentation": {}
    },
    {
        "label": "main",
        "importPath": "osgeo_utils.gdal_polygonize",
        "description": "osgeo_utils.gdal_polygonize",
        "isExtraImport": true,
        "detail": "osgeo_utils.gdal_polygonize",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "osgeo_utils.gdal_proximity",
        "description": "osgeo_utils.gdal_proximity",
        "isExtraImport": true,
        "detail": "osgeo_utils.gdal_proximity",
        "documentation": {}
    },
    {
        "label": "main",
        "importPath": "osgeo_utils.gdal_proximity",
        "description": "osgeo_utils.gdal_proximity",
        "isExtraImport": true,
        "detail": "osgeo_utils.gdal_proximity",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "osgeo_utils.gdal_retile",
        "description": "osgeo_utils.gdal_retile",
        "isExtraImport": true,
        "detail": "osgeo_utils.gdal_retile",
        "documentation": {}
    },
    {
        "label": "main",
        "importPath": "osgeo_utils.gdal_retile",
        "description": "osgeo_utils.gdal_retile",
        "isExtraImport": true,
        "detail": "osgeo_utils.gdal_retile",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "osgeo_utils.gdal_sieve",
        "description": "osgeo_utils.gdal_sieve",
        "isExtraImport": true,
        "detail": "osgeo_utils.gdal_sieve",
        "documentation": {}
    },
    {
        "label": "main",
        "importPath": "osgeo_utils.gdal_sieve",
        "description": "osgeo_utils.gdal_sieve",
        "isExtraImport": true,
        "detail": "osgeo_utils.gdal_sieve",
        "documentation": {}
    },
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "argparse",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "argparse",
        "description": "argparse",
        "detail": "argparse",
        "documentation": {}
    },
    {
        "label": "pformat",
        "importPath": "pprint",
        "description": "pprint",
        "isExtraImport": true,
        "detail": "pprint",
        "documentation": {}
    },
    {
        "label": "jmespath",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "jmespath",
        "description": "jmespath",
        "detail": "jmespath",
        "documentation": {}
    },
    {
        "label": "exceptions",
        "importPath": "jmespath",
        "description": "jmespath",
        "isExtraImport": true,
        "detail": "jmespath",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "osgeo_utils.ogrmerge",
        "description": "osgeo_utils.ogrmerge",
        "isExtraImport": true,
        "detail": "osgeo_utils.ogrmerge",
        "documentation": {}
    },
    {
        "label": "main",
        "importPath": "osgeo_utils.ogrmerge",
        "description": "osgeo_utils.ogrmerge",
        "isExtraImport": true,
        "detail": "osgeo_utils.ogrmerge",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "osgeo_utils.pct2rgb",
        "description": "osgeo_utils.pct2rgb",
        "isExtraImport": true,
        "detail": "osgeo_utils.pct2rgb",
        "documentation": {}
    },
    {
        "label": "main",
        "importPath": "osgeo_utils.pct2rgb",
        "description": "osgeo_utils.pct2rgb",
        "isExtraImport": true,
        "detail": "osgeo_utils.pct2rgb",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "osgeo_utils.rgb2pct",
        "description": "osgeo_utils.rgb2pct",
        "isExtraImport": true,
        "detail": "osgeo_utils.rgb2pct",
        "documentation": {}
    },
    {
        "label": "main",
        "importPath": "osgeo_utils.rgb2pct",
        "description": "osgeo_utils.rgb2pct",
        "isExtraImport": true,
        "detail": "osgeo_utils.rgb2pct",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.account.migrations.0001_initial",
        "description": "backend.account.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='UserProfile',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "backend.account.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "AccountConfig",
        "kind": 6,
        "importPath": "backend.account.apps",
        "description": "backend.account.apps",
        "peekOfCode": "class AccountConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'account'",
        "detail": "backend.account.apps",
        "documentation": {}
    },
    {
        "label": "UserProfile",
        "kind": 6,
        "importPath": "backend.account.models",
        "description": "backend.account.models",
        "peekOfCode": "class UserProfile(models.Model):\n    user = models.OneToOneField(User, related_name='userprofile', on_delete=models.CASCADE)\n    resume = models.FileField(null=True)\n@receiver(post_save, sender=User)\ndef save_profile(sender, instance, created, **kwargs):\n    user = instance\n    if created:\n        profile = UserProfile(user=user) \n        profile.save()",
        "detail": "backend.account.models",
        "documentation": {}
    },
    {
        "label": "save_profile",
        "kind": 2,
        "importPath": "backend.account.models",
        "description": "backend.account.models",
        "peekOfCode": "def save_profile(sender, instance, created, **kwargs):\n    user = instance\n    if created:\n        profile = UserProfile(user=user) \n        profile.save()",
        "detail": "backend.account.models",
        "documentation": {}
    },
    {
        "label": "SignUpSerializer",
        "kind": 6,
        "importPath": "backend.account.serializers",
        "description": "backend.account.serializers",
        "peekOfCode": "class SignUpSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = User\n        fields = ('first_name', 'last_name', 'email', 'password')\n        extra_kwargs = {\n            'first_name': { 'required': True, 'allow_blank': False },\n            'last_name': { 'required': True, 'allow_blank': False },\n            'email': { 'required': True, 'allow_blank': False },\n            'password': { 'required': True, 'allow_blank': False, 'min_length': 6 },\n        }",
        "detail": "backend.account.serializers",
        "documentation": {}
    },
    {
        "label": "UserSerializer",
        "kind": 6,
        "importPath": "backend.account.serializers",
        "description": "backend.account.serializers",
        "peekOfCode": "class UserSerializer(serializers.ModelSerializer):\n    resume = serializers.CharField(source='userprofile.resume')\n    class Meta:\n        model = User\n        fields = ('first_name', 'last_name', 'email', 'username', 'resume')",
        "detail": "backend.account.serializers",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "backend.account.urls",
        "description": "backend.account.urls",
        "peekOfCode": "urlpatterns = [\n    path('register/', views.register, name= 'register'),\n    path('me/', views.currentUser, name = 'current_user'),\n    path('me/update/', views.updateUser, name = 'update_user'),\n    path('upload/resume/', views.uploadResume, name = 'upload_resume'),\n]",
        "detail": "backend.account.urls",
        "documentation": {}
    },
    {
        "label": "validate_file_extension",
        "kind": 2,
        "importPath": "backend.account.validators",
        "description": "backend.account.validators",
        "peekOfCode": "def validate_file_extension(name):\n    isValid = True\n    ext = os.path.splitext(name)[1]# ('image', '.jpg')\n    valid_extensions = ['.pdf']\n    if not ext.lower() in valid_extensions:\n        isValid = False\n    return isValid",
        "detail": "backend.account.validators",
        "documentation": {}
    },
    {
        "label": "register",
        "kind": 2,
        "importPath": "backend.account.views",
        "description": "backend.account.views",
        "peekOfCode": "def register(request):\n    data = request.data\n    user = SignUpSerializer(data=data)\n    if user.is_valid():\n        if not User.objects.filter(username=data['email']).exists():\n           user = User.objects.create(\n               first_name = data['first_name'],\n               last_name = data['last_name'],\n               username = data['email'],\n               email = data['email'],",
        "detail": "backend.account.views",
        "documentation": {}
    },
    {
        "label": "currentUser",
        "kind": 2,
        "importPath": "backend.account.views",
        "description": "backend.account.views",
        "peekOfCode": "def currentUser(request):\n    user = UserSerializer(request.user)\n    return Response(user.data)\n@api_view(['PUT'])\n@permission_classes([IsAuthenticated])\ndef updateUser(request):\n    user = request.user\n    data = request.data\n    if(data['first_name'] != \"\" and data['last_name'] != \"\" and data['email'] != \"\"):\n        user.first_name = data['first_name']",
        "detail": "backend.account.views",
        "documentation": {}
    },
    {
        "label": "updateUser",
        "kind": 2,
        "importPath": "backend.account.views",
        "description": "backend.account.views",
        "peekOfCode": "def updateUser(request):\n    user = request.user\n    data = request.data\n    if(data['first_name'] != \"\" and data['last_name'] != \"\" and data['email'] != \"\"):\n        user.first_name = data['first_name']\n        user.last_name = data['last_name']\n        user.username = data['email']\n        user.email = data['email']\n        if data['password'] != '':\n            user.password = make_password(data['password'])",
        "detail": "backend.account.views",
        "documentation": {}
    },
    {
        "label": "uploadResume",
        "kind": 2,
        "importPath": "backend.account.views",
        "description": "backend.account.views",
        "peekOfCode": "def uploadResume(request):\n    user = request.user\n    resume = request.FILES['resume']\n    if resume == '':\n        return Response({ 'error': 'Please upload your resume.' }, status=status.HTTP_400_BAD_REQUEST)\n    isValidFile = validate_file_extension(resume.name)\n    if not isValidFile:\n        return Response({ 'error': 'Please upload only PDF file.' }, status=status.HTTP_400_BAD_REQUEST)\n    serializer = UserSerializer(user, many=False)\n    user.userprofile.resume = resume",
        "detail": "backend.account.views",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "backend.backend.asgi",
        "description": "backend.backend.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "backend.backend.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\ndotenv.read_dotenv()\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-l$q(#+fez)b)zsn+kf$^j=d!p%8at(24&kq^3(%movp46%s_h('\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-l$q(#+fez)b)zsn+kf$^j=d!p%8at(24&kq^3(%movp46%s_h('\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'rest_framework',",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'rest_framework',\n    'corsheaders',\n    'storages',",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\nROOT_URLCONF = 'backend.urls'",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "ROOT_URLCONF = 'backend.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "WSGI_APPLICATION = 'backend.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/4.0/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.contrib.gis.db.backends.postgis',\n        'NAME': os.environ.get('DATABASE_NAME'),\n        'USER': os.environ.get('DATABASE_USER'),\n        'PASSWORD': os.environ.get('DATABASE_PASSWORD'),\n        'HOST': os.environ.get('DATABASE_HOST'),",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.contrib.gis.db.backends.postgis',\n        'NAME': os.environ.get('DATABASE_NAME'),\n        'USER': os.environ.get('DATABASE_USER'),\n        'PASSWORD': os.environ.get('DATABASE_PASSWORD'),\n        'HOST': os.environ.get('DATABASE_HOST'),\n        'PORT': os.environ.get('DATABASE_PORT')\n    }\n}",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "REST_FRAMEWORK",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "REST_FRAMEWORK = {\n    'EXCEPTION_HANDLER': 'utils.custom_exception_handler.custom_exception_handler',\n    'DEFAULT_AUTHENTICATION_CLASSES': (\n        'rest_framework_simplejwt.authentication.JWTAuthentication',\n    )\n}\nSIMPLE_JWT = {\n    'ACCESS_TOKEN_LIFETIME': datetime.timedelta(days=15),\n    'AUTH_HEADER_TYPES': ('Bearer',),\n    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "SIMPLE_JWT",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "SIMPLE_JWT = {\n    'ACCESS_TOKEN_LIFETIME': datetime.timedelta(days=15),\n    'AUTH_HEADER_TYPES': ('Bearer',),\n    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),\n}\n# Internationalization\n# https://docs.djangoproject.com/en/4.0/topics/i18n/\nLANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.0/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field\nAWS_ACCESS_KEY_ID = os.environ.get('AWS_ACCESS_KEY_ID')",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.0/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field\nAWS_ACCESS_KEY_ID = os.environ.get('AWS_ACCESS_KEY_ID')\nAWS_SECRET_ACCESS_KEY = os.environ.get('AWS_SECRET_ACCESS_KEY')",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.0/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field\nAWS_ACCESS_KEY_ID = os.environ.get('AWS_ACCESS_KEY_ID')\nAWS_SECRET_ACCESS_KEY = os.environ.get('AWS_SECRET_ACCESS_KEY')\nAWS_STORAGE_BUCKET_NAME = os.environ.get('AWS_STORAGE_BUCKET_NAME')",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.0/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field\nAWS_ACCESS_KEY_ID = os.environ.get('AWS_ACCESS_KEY_ID')\nAWS_SECRET_ACCESS_KEY = os.environ.get('AWS_SECRET_ACCESS_KEY')\nAWS_STORAGE_BUCKET_NAME = os.environ.get('AWS_STORAGE_BUCKET_NAME')\nAWS_S3_SIGNATURE_VERSION = 's3v4'",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "STATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field\nAWS_ACCESS_KEY_ID = os.environ.get('AWS_ACCESS_KEY_ID')\nAWS_SECRET_ACCESS_KEY = os.environ.get('AWS_SECRET_ACCESS_KEY')\nAWS_STORAGE_BUCKET_NAME = os.environ.get('AWS_STORAGE_BUCKET_NAME')\nAWS_S3_SIGNATURE_VERSION = 's3v4'\nAWS_S3_REGION_NAME = os.environ.get('AWS_S3_REGION_NAME')\nAWS_S3_FILE_OVERWRITE = False\nAWS_DEFAULT_ACL = None",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "AWS_ACCESS_KEY_ID",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "AWS_ACCESS_KEY_ID = os.environ.get('AWS_ACCESS_KEY_ID')\nAWS_SECRET_ACCESS_KEY = os.environ.get('AWS_SECRET_ACCESS_KEY')\nAWS_STORAGE_BUCKET_NAME = os.environ.get('AWS_STORAGE_BUCKET_NAME')\nAWS_S3_SIGNATURE_VERSION = 's3v4'\nAWS_S3_REGION_NAME = os.environ.get('AWS_S3_REGION_NAME')\nAWS_S3_FILE_OVERWRITE = False\nAWS_DEFAULT_ACL = None\nAWS_S3_VERIFY = True\nDEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage' \nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "AWS_SECRET_ACCESS_KEY",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "AWS_SECRET_ACCESS_KEY = os.environ.get('AWS_SECRET_ACCESS_KEY')\nAWS_STORAGE_BUCKET_NAME = os.environ.get('AWS_STORAGE_BUCKET_NAME')\nAWS_S3_SIGNATURE_VERSION = 's3v4'\nAWS_S3_REGION_NAME = os.environ.get('AWS_S3_REGION_NAME')\nAWS_S3_FILE_OVERWRITE = False\nAWS_DEFAULT_ACL = None\nAWS_S3_VERIFY = True\nDEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage' \nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nVIRTUAL_ENV_BASE = os.environ.get('VIRTUAL_ENV')",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "AWS_STORAGE_BUCKET_NAME",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "AWS_STORAGE_BUCKET_NAME = os.environ.get('AWS_STORAGE_BUCKET_NAME')\nAWS_S3_SIGNATURE_VERSION = 's3v4'\nAWS_S3_REGION_NAME = os.environ.get('AWS_S3_REGION_NAME')\nAWS_S3_FILE_OVERWRITE = False\nAWS_DEFAULT_ACL = None\nAWS_S3_VERIFY = True\nDEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage' \nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nVIRTUAL_ENV_BASE = os.environ.get('VIRTUAL_ENV')\nGEOS_LIBRARY_PATH = VIRTUAL_ENV_BASE + '/Lib/site-packages/osgeo/geos_c.dll'",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "AWS_S3_SIGNATURE_VERSION",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "AWS_S3_SIGNATURE_VERSION = 's3v4'\nAWS_S3_REGION_NAME = os.environ.get('AWS_S3_REGION_NAME')\nAWS_S3_FILE_OVERWRITE = False\nAWS_DEFAULT_ACL = None\nAWS_S3_VERIFY = True\nDEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage' \nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nVIRTUAL_ENV_BASE = os.environ.get('VIRTUAL_ENV')\nGEOS_LIBRARY_PATH = VIRTUAL_ENV_BASE + '/Lib/site-packages/osgeo/geos_c.dll'\nGDAL_LIBRARY_PATH = VIRTUAL_ENV_BASE + '/Lib/site-packages/osgeo/gdal304.dll'",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "AWS_S3_REGION_NAME",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "AWS_S3_REGION_NAME = os.environ.get('AWS_S3_REGION_NAME')\nAWS_S3_FILE_OVERWRITE = False\nAWS_DEFAULT_ACL = None\nAWS_S3_VERIFY = True\nDEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage' \nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nVIRTUAL_ENV_BASE = os.environ.get('VIRTUAL_ENV')\nGEOS_LIBRARY_PATH = VIRTUAL_ENV_BASE + '/Lib/site-packages/osgeo/geos_c.dll'\nGDAL_LIBRARY_PATH = VIRTUAL_ENV_BASE + '/Lib/site-packages/osgeo/gdal304.dll'",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "AWS_S3_FILE_OVERWRITE",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "AWS_S3_FILE_OVERWRITE = False\nAWS_DEFAULT_ACL = None\nAWS_S3_VERIFY = True\nDEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage' \nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nVIRTUAL_ENV_BASE = os.environ.get('VIRTUAL_ENV')\nGEOS_LIBRARY_PATH = VIRTUAL_ENV_BASE + '/Lib/site-packages/osgeo/geos_c.dll'\nGDAL_LIBRARY_PATH = VIRTUAL_ENV_BASE + '/Lib/site-packages/osgeo/gdal304.dll'",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "AWS_DEFAULT_ACL",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "AWS_DEFAULT_ACL = None\nAWS_S3_VERIFY = True\nDEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage' \nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nVIRTUAL_ENV_BASE = os.environ.get('VIRTUAL_ENV')\nGEOS_LIBRARY_PATH = VIRTUAL_ENV_BASE + '/Lib/site-packages/osgeo/geos_c.dll'\nGDAL_LIBRARY_PATH = VIRTUAL_ENV_BASE + '/Lib/site-packages/osgeo/gdal304.dll'",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "AWS_S3_VERIFY",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "AWS_S3_VERIFY = True\nDEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage' \nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nVIRTUAL_ENV_BASE = os.environ.get('VIRTUAL_ENV')\nGEOS_LIBRARY_PATH = VIRTUAL_ENV_BASE + '/Lib/site-packages/osgeo/geos_c.dll'\nGDAL_LIBRARY_PATH = VIRTUAL_ENV_BASE + '/Lib/site-packages/osgeo/gdal304.dll'",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_FILE_STORAGE",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage' \nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nVIRTUAL_ENV_BASE = os.environ.get('VIRTUAL_ENV')\nGEOS_LIBRARY_PATH = VIRTUAL_ENV_BASE + '/Lib/site-packages/osgeo/geos_c.dll'\nGDAL_LIBRARY_PATH = VIRTUAL_ENV_BASE + '/Lib/site-packages/osgeo/gdal304.dll'",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nVIRTUAL_ENV_BASE = os.environ.get('VIRTUAL_ENV')\nGEOS_LIBRARY_PATH = VIRTUAL_ENV_BASE + '/Lib/site-packages/osgeo/geos_c.dll'\nGDAL_LIBRARY_PATH = VIRTUAL_ENV_BASE + '/Lib/site-packages/osgeo/gdal304.dll'",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "VIRTUAL_ENV_BASE",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "VIRTUAL_ENV_BASE = os.environ.get('VIRTUAL_ENV')\nGEOS_LIBRARY_PATH = VIRTUAL_ENV_BASE + '/Lib/site-packages/osgeo/geos_c.dll'\nGDAL_LIBRARY_PATH = VIRTUAL_ENV_BASE + '/Lib/site-packages/osgeo/gdal304.dll'",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "GEOS_LIBRARY_PATH",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "GEOS_LIBRARY_PATH = VIRTUAL_ENV_BASE + '/Lib/site-packages/osgeo/geos_c.dll'\nGDAL_LIBRARY_PATH = VIRTUAL_ENV_BASE + '/Lib/site-packages/osgeo/gdal304.dll'",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "GDAL_LIBRARY_PATH",
        "kind": 5,
        "importPath": "backend.backend.settings",
        "description": "backend.backend.settings",
        "peekOfCode": "GDAL_LIBRARY_PATH = VIRTUAL_ENV_BASE + '/Lib/site-packages/osgeo/gdal304.dll'",
        "detail": "backend.backend.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "backend.backend.urls",
        "description": "backend.backend.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('api/', include('job.urls')),\n    path('api/', include('account.urls')),\n    path('api/token/',  TokenObtainPairView.as_view()),\n     path('api/token/verify/', TokenVerifyView.as_view())\n]\nhandler500 = 'utils.error_views.handler500'\nhandler404 = 'utils.error_views.handler404'",
        "detail": "backend.backend.urls",
        "documentation": {}
    },
    {
        "label": "handler500",
        "kind": 5,
        "importPath": "backend.backend.urls",
        "description": "backend.backend.urls",
        "peekOfCode": "handler500 = 'utils.error_views.handler500'\nhandler404 = 'utils.error_views.handler404'",
        "detail": "backend.backend.urls",
        "documentation": {}
    },
    {
        "label": "handler404",
        "kind": 5,
        "importPath": "backend.backend.urls",
        "description": "backend.backend.urls",
        "peekOfCode": "handler404 = 'utils.error_views.handler404'",
        "detail": "backend.backend.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "backend.backend.wsgi",
        "description": "backend.backend.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "backend.backend.wsgi",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.job.migrations.0001_initial",
        "description": "backend.job.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Job',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "backend.job.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.job.migrations.0002_alter_job_jobtype",
        "description": "backend.job.migrations.0002_alter_job_jobtype",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('job', '0001_initial'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='job',\n            name='jobType',\n            field=models.CharField(choices=[('Permanent', 'Permanent'), ('Temporary', 'Temporary'), ('Internship', 'Internship')], default='Permanent', max_length=10),\n        ),",
        "detail": "backend.job.migrations.0002_alter_job_jobtype",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.job.migrations.0003_candidatesapplied",
        "description": "backend.job.migrations.0003_candidatesapplied",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n        ('job', '0002_alter_job_jobtype'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='CandidatesApplied',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "backend.job.migrations.0003_candidatesapplied",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.job.migrations.0004_alter_candidatesapplied_job",
        "description": "backend.job.migrations.0004_alter_candidatesapplied_job",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('job', '0003_candidatesapplied'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='candidatesapplied',\n            name='job',\n            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='candidatesapplied', to='job.job'),\n        ),",
        "detail": "backend.job.migrations.0004_alter_candidatesapplied_job",
        "documentation": {}
    },
    {
        "label": "JobConfig",
        "kind": 6,
        "importPath": "backend.job.apps",
        "description": "backend.job.apps",
        "peekOfCode": "class JobConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'job'",
        "detail": "backend.job.apps",
        "documentation": {}
    },
    {
        "label": "JobsFilter",
        "kind": 6,
        "importPath": "backend.job.filters",
        "description": "backend.job.filters",
        "peekOfCode": "class JobsFilter(filters.FilterSet):\n    keyword = filters.CharFilter(field_name='title', lookup_expr='icontains')\n    location = filters.CharFilter(field_name='address', lookup_expr='icontains')\n    min_salary = filters.NumberFilter(field_name=\"salary\" or 0, lookup_expr='gte')\n    max_salary = filters.NumberFilter(field_name=\"salary\" or 1000000, lookup_expr='lte')\n    class Meta:\n        model = Job\n        fields = ['keyword', 'location','education', 'jobType', 'experience', 'industry', 'min_salary', 'max_salary']",
        "detail": "backend.job.filters",
        "documentation": {}
    },
    {
        "label": "JobType",
        "kind": 6,
        "importPath": "backend.job.models",
        "description": "backend.job.models",
        "peekOfCode": "class JobType(models.TextChoices):\n    Permanent = 'Permanent'\n    Temporary = 'Temporary'\n    Internship = 'Internship'\nclass Education(models.TextChoices):\n    Bachelors = 'Bachelors'\n    Masters = 'Masters'\n    Phd = 'Phd'\nclass Industry(models.TextChoices):\n    Business = 'Business'",
        "detail": "backend.job.models",
        "documentation": {}
    },
    {
        "label": "Education",
        "kind": 6,
        "importPath": "backend.job.models",
        "description": "backend.job.models",
        "peekOfCode": "class Education(models.TextChoices):\n    Bachelors = 'Bachelors'\n    Masters = 'Masters'\n    Phd = 'Phd'\nclass Industry(models.TextChoices):\n    Business = 'Business'\n    IT = 'Information Technology'\n    Banking = 'Banking'\n    Education = 'Education/Training'\n    Telecommunication = 'Telecommunication'",
        "detail": "backend.job.models",
        "documentation": {}
    },
    {
        "label": "Industry",
        "kind": 6,
        "importPath": "backend.job.models",
        "description": "backend.job.models",
        "peekOfCode": "class Industry(models.TextChoices):\n    Business = 'Business'\n    IT = 'Information Technology'\n    Banking = 'Banking'\n    Education = 'Education/Training'\n    Telecommunication = 'Telecommunication'\n    Others = 'Others'\nclass Experience(models.TextChoices):\n    NO_EXPERIENCE = 'No Experience'\n    ONE_YEAR = '1 Years'",
        "detail": "backend.job.models",
        "documentation": {}
    },
    {
        "label": "Experience",
        "kind": 6,
        "importPath": "backend.job.models",
        "description": "backend.job.models",
        "peekOfCode": "class Experience(models.TextChoices):\n    NO_EXPERIENCE = 'No Experience'\n    ONE_YEAR = '1 Years'\n    TWO_YEAR = '2 Years'\n    THREE_YEAR_PLUS = '3 Years above'\ndef return_date_time():\n    now = datetime.now()\n    return now + timedelta(days=10)\nclass Job(models.Model):\n    title = models.CharField(max_length=200, null=True)",
        "detail": "backend.job.models",
        "documentation": {}
    },
    {
        "label": "Job",
        "kind": 6,
        "importPath": "backend.job.models",
        "description": "backend.job.models",
        "peekOfCode": "class Job(models.Model):\n    title = models.CharField(max_length=200, null=True)\n    description = models.TextField(null=True)\n    email = models.EmailField(null=True)\n    address = models.CharField(max_length=100, null=True)\n    jobType = models.CharField(\n        max_length=10,\n        choices=JobType.choices,\n        default=JobType.Permanent\n    )",
        "detail": "backend.job.models",
        "documentation": {}
    },
    {
        "label": "CandidatesApplied",
        "kind": 6,
        "importPath": "backend.job.models",
        "description": "backend.job.models",
        "peekOfCode": "class CandidatesApplied(models.Model):\n    job = models.ForeignKey(Job, related_name = \"candidatesapplied\" ,on_delete=models.CASCADE)\n    user = models.ForeignKey(User, on_delete=models.SET_NULL, null=True)\n    resume = models.CharField(max_length=200)\n    appliedAt = models.DateTimeField(auto_now_add=True)",
        "detail": "backend.job.models",
        "documentation": {}
    },
    {
        "label": "return_date_time",
        "kind": 2,
        "importPath": "backend.job.models",
        "description": "backend.job.models",
        "peekOfCode": "def return_date_time():\n    now = datetime.now()\n    return now + timedelta(days=10)\nclass Job(models.Model):\n    title = models.CharField(max_length=200, null=True)\n    description = models.TextField(null=True)\n    email = models.EmailField(null=True)\n    address = models.CharField(max_length=100, null=True)\n    jobType = models.CharField(\n        max_length=10,",
        "detail": "backend.job.models",
        "documentation": {}
    },
    {
        "label": "JobSerializer",
        "kind": 6,
        "importPath": "backend.job.serializers",
        "description": "backend.job.serializers",
        "peekOfCode": "class JobSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Job\n        fields ='__all__'\nclass CandidatesAppliedSerializer(serializers.ModelSerializer):\n    job = JobSerializer()\n    class Meta:\n        model = CandidatesApplied\n        fields = ('user', 'resume', 'appliedAt', 'job')",
        "detail": "backend.job.serializers",
        "documentation": {}
    },
    {
        "label": "CandidatesAppliedSerializer",
        "kind": 6,
        "importPath": "backend.job.serializers",
        "description": "backend.job.serializers",
        "peekOfCode": "class CandidatesAppliedSerializer(serializers.ModelSerializer):\n    job = JobSerializer()\n    class Meta:\n        model = CandidatesApplied\n        fields = ('user', 'resume', 'appliedAt', 'job')",
        "detail": "backend.job.serializers",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "backend.job.urls",
        "description": "backend.job.urls",
        "peekOfCode": "urlpatterns = [\n    path('jobs/', views.getAllJobs, name='jobs'),\n    path('jobs/new/', views.newJob, name='new_job'),\n    path('jobs/<str:pk>/', views.getJob, name='job'),\n    path('jobs/<str:pk>/update/', views.updateJob, name='update_job'),\n    path('jobs/<str:pk>/delete/', views.deleteJob, name='delete_job'),\n    path('stats/<str:topic>/', views.getTopicStats, name='get_topic_stats'),\n    path('jobs/<str:pk>/apply', views.applyToJob, name =\"apply_job\"),\n    path('me/jobs/applied/', views.getJobsApplied, name =\"get_applied_jobs\"),\n    path('jobs/<str:pk>/check', views.isApplied, name =\"check_job_applied\"),",
        "detail": "backend.job.urls",
        "documentation": {}
    },
    {
        "label": "getAllJobs",
        "kind": 2,
        "importPath": "backend.job.views",
        "description": "backend.job.views",
        "peekOfCode": "def getAllJobs(request):\n    filterset = JobsFilter(request.GET, queryset=Job.objects.all().order_by('id'))\n    count = filterset.qs.count()\n    # Pagination\n    resPerPage = 3\n    paginator = PageNumberPagination()\n    paginator.page_size = resPerPage\n    paginatedQueryset = paginator.paginate_queryset(filterset.qs, request)\n    serializer = JobSerializer(paginatedQueryset, many=True)\n    return Response({",
        "detail": "backend.job.views",
        "documentation": {}
    },
    {
        "label": "getJob",
        "kind": 2,
        "importPath": "backend.job.views",
        "description": "backend.job.views",
        "peekOfCode": "def getJob(request, pk):\n    job = get_object_or_404(Job, id=pk)\n    serializer = JobSerializer(job, many=False)\n    return Response(serializer.data)\n@api_view(['POST'])\n@permission_classes([IsAuthenticated])\ndef newJob(request):\n    request.data['user'] = request.user\n    data = request.data\n    job = Job.objects.create(**data)",
        "detail": "backend.job.views",
        "documentation": {}
    },
    {
        "label": "newJob",
        "kind": 2,
        "importPath": "backend.job.views",
        "description": "backend.job.views",
        "peekOfCode": "def newJob(request):\n    request.data['user'] = request.user\n    data = request.data\n    job = Job.objects.create(**data)\n    serializer = JobSerializer(job, many=False)\n    return Response(serializer.data)\n@api_view(['PUT'])\n@permission_classes([IsAuthenticated])\ndef updateJob(request, pk):\n    job = get_object_or_404(Job, id=pk)",
        "detail": "backend.job.views",
        "documentation": {}
    },
    {
        "label": "updateJob",
        "kind": 2,
        "importPath": "backend.job.views",
        "description": "backend.job.views",
        "peekOfCode": "def updateJob(request, pk):\n    job = get_object_or_404(Job, id=pk)\n    if(job.user != request.user):\n        return Response({'Message': \"You are not authorized to perform such this action\"}, status = status.HTTP_403_FORBIDDEN)\n    job.title = request.data['title']\n    job.description = request.data['description']\n    job.email = request.data['email']\n    job.address = request.data['address']\n    job.jobType = request.data['jobType']\n    job.education = request.data['education']",
        "detail": "backend.job.views",
        "documentation": {}
    },
    {
        "label": "deleteJob",
        "kind": 2,
        "importPath": "backend.job.views",
        "description": "backend.job.views",
        "peekOfCode": "def deleteJob(request, pk):\n    job = get_object_or_404(Job, id=pk)\n    if(job.user != request.user):\n        return Response({'Message': \"You are not authorized to perform this action\"}, status = status.HTTP_403_FORBIDDEN)\n    job.delete()\n    return Response({ 'message': 'Job {pk} is Deleted.' }, status=status.HTTP_200_OK)\n@api_view(['GET'])\ndef getTopicStats(request, topic):\n    args = { 'title__icontains': topic }\n    jobs = Job.objects.filter(**args)",
        "detail": "backend.job.views",
        "documentation": {}
    },
    {
        "label": "getTopicStats",
        "kind": 2,
        "importPath": "backend.job.views",
        "description": "backend.job.views",
        "peekOfCode": "def getTopicStats(request, topic):\n    args = { 'title__icontains': topic }\n    jobs = Job.objects.filter(**args)\n    if len(jobs) == 0:\n        return Response({ 'message': 'Not stats found for {topic}'.format(topic=topic) })\n    stats = jobs.aggregate(\n        total_jobs = Count('title'),\n        avg_positions = Avg('positions'),\n        avg_salary = Avg('salary'),\n        min_salary = Min('salary'),",
        "detail": "backend.job.views",
        "documentation": {}
    },
    {
        "label": "applyToJob",
        "kind": 2,
        "importPath": "backend.job.views",
        "description": "backend.job.views",
        "peekOfCode": "def applyToJob(request, pk):\n    user = request.user\n    job = get_object_or_404(Job, id=pk)\n    if user.userprofile.resume == '':\n        return Response({ 'error': 'Please upload your resume first' }, status=status.HTTP_400_BAD_REQUEST)\n    if job.lastDate < timezone.now():\n        return Response({ 'error': 'You can not apply to this job. Date is over' }, status=status.HTTP_400_BAD_REQUEST)\n    alreadyApplied = job.candidatesapplied.filter(user=user).exists()\n    if alreadyApplied:\n        return Response({ 'error': 'You have already apply to this job.' }, status=status.HTTP_400_BAD_REQUEST)",
        "detail": "backend.job.views",
        "documentation": {}
    },
    {
        "label": "getJobsApplied",
        "kind": 2,
        "importPath": "backend.job.views",
        "description": "backend.job.views",
        "peekOfCode": "def getJobsApplied(request):\n    args ={ 'user_id': request.user.id }\n    jobs = CandidatesApplied.objects.filter(**args)\n    serializer = CandidatesAppliedSerializer(jobs, many = True)\n    return Response(serializer.data)\n@api_view(['GET'])\n@permission_classes([IsAuthenticated])\ndef isApplied(request, pk):\n    isApplied = bool(False)\n    job = get_object_or_404(Job, id=pk)",
        "detail": "backend.job.views",
        "documentation": {}
    },
    {
        "label": "isApplied",
        "kind": 2,
        "importPath": "backend.job.views",
        "description": "backend.job.views",
        "peekOfCode": "def isApplied(request, pk):\n    isApplied = bool(False)\n    job = get_object_or_404(Job, id=pk)\n    args ={ 'user_id': request.user.id, 'job': job }\n    jobs = CandidatesApplied.objects.filter(**args)\n    if(jobs):\n        isApplied = bool(True)\n        return Response(isApplied)\n    return Response(isApplied)\n@api_view(['GET'])",
        "detail": "backend.job.views",
        "documentation": {}
    },
    {
        "label": "getCurrentUserPostedJobs",
        "kind": 2,
        "importPath": "backend.job.views",
        "description": "backend.job.views",
        "peekOfCode": "def getCurrentUserPostedJobs(request):\n    args = { 'user': request.user.id }\n    jobs = Job.objects.filter(**args)\n    serializer = JobSerializer(jobs, many=True)\n    return Response(serializer.data)\n@api_view(['GET'])\n@permission_classes([IsAuthenticated])\ndef getCandidatesApplied(request, pk):\n    user = request.user\n    job = get_object_or_404(Job, id=pk)",
        "detail": "backend.job.views",
        "documentation": {}
    },
    {
        "label": "getCandidatesApplied",
        "kind": 2,
        "importPath": "backend.job.views",
        "description": "backend.job.views",
        "peekOfCode": "def getCandidatesApplied(request, pk):\n    user = request.user\n    job = get_object_or_404(Job, id=pk)\n    # only creator of the job object is allowed to see candidates\n    if job.user != user:\n        return Response({ 'error': 'You can not acces this job' }, status=status.HTTP_403_FORBIDDEN)\n    candidates = job.candidatesapplied.all()\n    serializer = CandidatesAppliedSerializer(candidates, many=True)\n    return Response(serializer.data)",
        "detail": "backend.job.views",
        "documentation": {}
    },
    {
        "label": "custom_exception_handler",
        "kind": 2,
        "importPath": "backend.utils.custom_exception_handler",
        "description": "backend.utils.custom_exception_handler",
        "peekOfCode": "def custom_exception_handler(exc, context):\n    response = exception_handler(exc, context)\n    exception_class = exc.__class__.__name__\n    print(exception_class)\n    if exception_class == 'AuthenticationFailed':\n        response.data = {\n            \"error\": \"Invalid Email or Password. Please try again.\"\n        }\n    if exception_class == 'NotAuthenticated':\n        response.data = {",
        "detail": "backend.utils.custom_exception_handler",
        "documentation": {}
    },
    {
        "label": "handler500",
        "kind": 2,
        "importPath": "backend.utils.error_views",
        "description": "backend.utils.error_views",
        "peekOfCode": "def handler500(request):\n    message = (\"Internal Server Error\")\n    response = JsonResponse(data ={'error':message})\n    response.status_code = 500\n    return response\ndef handler404(request,exception):\n    message = (\"Route Not Found\")\n    response = JsonResponse(data ={'error':message})\n    response.status_code = 404\n    return response",
        "detail": "backend.utils.error_views",
        "documentation": {}
    },
    {
        "label": "handler404",
        "kind": 2,
        "importPath": "backend.utils.error_views",
        "description": "backend.utils.error_views",
        "peekOfCode": "def handler404(request,exception):\n    message = (\"Route Not Found\")\n    response = JsonResponse(data ={'error':message})\n    response.status_code = 404\n    return response",
        "detail": "backend.utils.error_views",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "backend.manage",
        "description": "backend.manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'backend.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "backend.manage",
        "documentation": {}
    },
    {
        "label": "bin_dir",
        "kind": 5,
        "importPath": "myenv.Scripts.activate_this",
        "description": "myenv.Scripts.activate_this",
        "peekOfCode": "bin_dir = os.path.dirname(abs_file)\nbase = bin_dir[: -len(\"Scripts\") - 1]  # strip away the bin part from the __file__, plus the path separator\n# prepend bin to PATH (this file is inside the bin directory)\nos.environ[\"PATH\"] = os.pathsep.join([bin_dir] + os.environ.get(\"PATH\", \"\").split(os.pathsep))\nos.environ[\"VIRTUAL_ENV\"] = base  # virtual env is right above bin directory\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"..\\Lib\\site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)",
        "detail": "myenv.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "base",
        "kind": 5,
        "importPath": "myenv.Scripts.activate_this",
        "description": "myenv.Scripts.activate_this",
        "peekOfCode": "base = bin_dir[: -len(\"Scripts\") - 1]  # strip away the bin part from the __file__, plus the path separator\n# prepend bin to PATH (this file is inside the bin directory)\nos.environ[\"PATH\"] = os.pathsep.join([bin_dir] + os.environ.get(\"PATH\", \"\").split(os.pathsep))\nos.environ[\"VIRTUAL_ENV\"] = base  # virtual env is right above bin directory\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"..\\Lib\\site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)\nsys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]",
        "detail": "myenv.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "os.environ[\"PATH\"]",
        "kind": 5,
        "importPath": "myenv.Scripts.activate_this",
        "description": "myenv.Scripts.activate_this",
        "peekOfCode": "os.environ[\"PATH\"] = os.pathsep.join([bin_dir] + os.environ.get(\"PATH\", \"\").split(os.pathsep))\nos.environ[\"VIRTUAL_ENV\"] = base  # virtual env is right above bin directory\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"..\\Lib\\site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)\nsys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": "myenv.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "os.environ[\"VIRTUAL_ENV\"]",
        "kind": 5,
        "importPath": "myenv.Scripts.activate_this",
        "description": "myenv.Scripts.activate_this",
        "peekOfCode": "os.environ[\"VIRTUAL_ENV\"] = base  # virtual env is right above bin directory\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"..\\Lib\\site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)\nsys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": "myenv.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "prev_length",
        "kind": 5,
        "importPath": "myenv.Scripts.activate_this",
        "description": "myenv.Scripts.activate_this",
        "peekOfCode": "prev_length = len(sys.path)\nfor lib in \"..\\Lib\\site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)\nsys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": "myenv.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "sys.path[:]",
        "kind": 5,
        "importPath": "myenv.Scripts.activate_this",
        "description": "myenv.Scripts.activate_this",
        "peekOfCode": "sys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": "myenv.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "sys.real_prefix",
        "kind": 5,
        "importPath": "myenv.Scripts.activate_this",
        "description": "myenv.Scripts.activate_this",
        "peekOfCode": "sys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": "myenv.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "sys.prefix",
        "kind": 5,
        "importPath": "myenv.Scripts.activate_this",
        "description": "myenv.Scripts.activate_this",
        "peekOfCode": "sys.prefix = base",
        "detail": "myenv.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "myenv.Scripts.jp",
        "description": "myenv.Scripts.jp",
        "peekOfCode": "def main():\n    parser = argparse.ArgumentParser()\n    parser.add_argument('expression')\n    parser.add_argument('-f', '--filename',\n                        help=('The filename containing the input data.  '\n                              'If a filename is not given then data is '\n                              'read from stdin.'))\n    parser.add_argument('--ast', action='store_true',\n                        help=('Pretty print the AST, do not search the data.'))\n    args = parser.parse_args()",
        "detail": "myenv.Scripts.jp",
        "documentation": {}
    }
]